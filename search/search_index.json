{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"seabreeze Documentation coming soon!","title":"Home"},{"location":"#seabreeze","text":"Documentation coming soon!","title":"seabreeze"},{"location":"installation/","text":"Installtion Requirements A UNIX-based operating system (like Linux or MacOS) with bash is recommended. This software has not been tested with the Windows shell. seabreeze requires conda >= 24.3.0 to install python packages and manage environments. We recommend Miniforge , a minimal conda installer that is similar to Miniconda . Installation seabreeze is a Snakemake workflow with associated Python scripts. Download the latest release of seabreeze from the Github Repository . Set up seabreeze only requires an intial conda environment to be set up. Navigate to the seabreeze diectory and run the following command: conda env create --name seabreeze --file bin/workflow/envs/seabreeze.yml You're all set! See [Usage] to get started. Optional By default, seabreeze creates conda environments and installs packages in the seabreeze working directory. However, if you plan to use seabreeze multiple times, or with different directories for different samples, then it can be helpful to have a common location on your system to store environments. This can save disk space and time. Create a folder for Snakemake to store conda environments. We recommend a directory in $HOME, but it could be anywhere. mkdir $HOME/snakemake_conda_envs Append this line to your ~/.bashrc , ~/.zshrc or as applicable to the shell you are using: export SNAKEMAKE_CONDA_PREFIX=$HOME/snakemake_conda_envs","title":"Installation"},{"location":"installation/#installtion","text":"","title":"Installtion"},{"location":"installation/#requirements","text":"A UNIX-based operating system (like Linux or MacOS) with bash is recommended. This software has not been tested with the Windows shell. seabreeze requires conda >= 24.3.0 to install python packages and manage environments. We recommend Miniforge , a minimal conda installer that is similar to Miniconda .","title":"Requirements"},{"location":"installation/#installation","text":"seabreeze is a Snakemake workflow with associated Python scripts. Download the latest release of seabreeze from the Github Repository .","title":"Installation"},{"location":"installation/#set-up","text":"seabreeze only requires an intial conda environment to be set up. Navigate to the seabreeze diectory and run the following command: conda env create --name seabreeze --file bin/workflow/envs/seabreeze.yml You're all set! See [Usage] to get started.","title":"Set up"},{"location":"installation/#optional","text":"By default, seabreeze creates conda environments and installs packages in the seabreeze working directory. However, if you plan to use seabreeze multiple times, or with different directories for different samples, then it can be helpful to have a common location on your system to store environments. This can save disk space and time. Create a folder for Snakemake to store conda environments. We recommend a directory in $HOME, but it could be anywhere. mkdir $HOME/snakemake_conda_envs Append this line to your ~/.bashrc , ~/.zshrc or as applicable to the shell you are using: export SNAKEMAKE_CONDA_PREFIX=$HOME/snakemake_conda_envs","title":"Optional"},{"location":"usage/","text":"Preparing input Assuming you have completed installation , you can now prepare input files for analysis. At its core seabreeze is designed for bacterial resequencing experiments, and therefore predicts mutations between reference-query pairs, where the reference sequence is referred to as an ancestor and the query sequence being compared to is called the assembly . This nomenclature is use throughout the documentation and the software. seabreeze requires FASTA files for all of the bacterial genomes being analysed. These FASTA files should only contain a single contig for the full-length genome. It should not contain additional entries for plasmids. seabreeze works best with genome assemblies generated from long-read sequencing as these can capture structural variants that occur between repeat sequences. It also does not work well for comparing genomes with high sequence/ phylogenetic divergence (for example between different bacterial species). All of the input/output of the analysis is stored in data/ . The pairwise comparisons to be performed are specified in a csv file called data.csv in the data/ directory. Populate the csv file with the ancestor-assembly pairs you wish to analyse. For example: assembly ancestor genome1 genome2 genome3 genome4 Place the corresponding FASTA files for these genomes in 02_genomes . seabreeze expects that these file names to match, and contain the extension .fasta . Therefore, for this example, the data/ directory should look like this: seabreeze | |---data/ | | | |---data.csv | |---02_genomes/ | | | | | |---genome1.fasta | | |---genome2.fasta | | |---genome3.fasta | | |---genome4.fasta Note that many assemblies can use the same ancestor, but the same assembly cannot use many ancestors: For example, this is fine: assembly ancestor genome1 genome2 genome3 genome2 This will cause a fatal error: assembly ancestor genome1 genome2 genome1 genome3 Some commands ahead may require additional input, and will be specified in respective sections. Commands Analyse genome sizes","title":"Usage"},{"location":"usage/#preparing-input","text":"Assuming you have completed installation , you can now prepare input files for analysis. At its core seabreeze is designed for bacterial resequencing experiments, and therefore predicts mutations between reference-query pairs, where the reference sequence is referred to as an ancestor and the query sequence being compared to is called the assembly . This nomenclature is use throughout the documentation and the software. seabreeze requires FASTA files for all of the bacterial genomes being analysed. These FASTA files should only contain a single contig for the full-length genome. It should not contain additional entries for plasmids. seabreeze works best with genome assemblies generated from long-read sequencing as these can capture structural variants that occur between repeat sequences. It also does not work well for comparing genomes with high sequence/ phylogenetic divergence (for example between different bacterial species). All of the input/output of the analysis is stored in data/ . The pairwise comparisons to be performed are specified in a csv file called data.csv in the data/ directory. Populate the csv file with the ancestor-assembly pairs you wish to analyse. For example: assembly ancestor genome1 genome2 genome3 genome4 Place the corresponding FASTA files for these genomes in 02_genomes . seabreeze expects that these file names to match, and contain the extension .fasta . Therefore, for this example, the data/ directory should look like this: seabreeze | |---data/ | | | |---data.csv | |---02_genomes/ | | | | | |---genome1.fasta | | |---genome2.fasta | | |---genome3.fasta | | |---genome4.fasta Note that many assemblies can use the same ancestor, but the same assembly cannot use many ancestors: For example, this is fine: assembly ancestor genome1 genome2 genome3 genome2 This will cause a fatal error: assembly ancestor genome1 genome2 genome1 genome3 Some commands ahead may require additional input, and will be specified in respective sections.","title":"Preparing input"},{"location":"usage/#commands","text":"","title":"Commands"},{"location":"usage/#analyse-genome-sizes","text":"","title":"Analyse genome sizes"}]}